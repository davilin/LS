

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Address : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Address entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Address()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Address(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Address> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Address.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LocalName
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.LocalName);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.LocalName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocalName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocalName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocalName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AddressLine1
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine1);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AddressLine2
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine2);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string City
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.City);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StateOrProvince
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.StateOrProvince);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.StateOrProvince, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateOrProvince_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateOrProvince_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateOrProvince_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ZIPOrPostalCode
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ZIPOrPostalCode);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ZIPOrPostalCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZIPOrPostalCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZIPOrPostalCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZIPOrPostalCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<short> DBFlag
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.DBFlag);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.DBFlag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DBFlag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DBFlag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DBFlag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreateBy
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreateBy);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreateBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreateTime);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreateTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreateOffice
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreateOffice);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreateOffice, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateOffice_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateOffice_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateOffice_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifyBy
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifyBy);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifyBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifyBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifyBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifyBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ModifyTime
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifyTime);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifyTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifyTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifyTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifyTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifyOffice
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifyOffice);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifyOffice, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifyOffice_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifyOffice_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifyOffice_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Defendant Defendant
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Defendant);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Defendant, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendant_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendant_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendant_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Address,
                global::LightSwitchApplication.Address.DetailsClass,
                global::LightSwitchApplication.Address.DetailsClass.IImplementation,
                global::LightSwitchApplication.Address.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>.Entry
                __AddressEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>.Entry(
                    global::LightSwitchApplication.Address.DetailsClass.__Address_CreateNew,
                    global::LightSwitchApplication.Address.DetailsClass.__Address_Created,
                    global::LightSwitchApplication.Address.DetailsClass.__Address_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Address __Address_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Address> es)
            {
                return new global::LightSwitchApplication.Address(es);
            }
            private static void __Address_Created(global::LightSwitchApplication.Address e)
            {
                e.Address_Created();
            }
            private static bool __Address_AllowSaveWithErrors(global::LightSwitchApplication.Address e)
            {
                bool result = false;
                e.Address_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Address.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> LocalName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.LocalName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> AddressLine1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> AddressLine2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> StateOrProvince
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.StateOrProvince) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> ZIPOrPostalCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ZIPOrPostalCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<short>> DBFlag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.DBFlag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<short>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> CreateBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreateBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime> CreateTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreateTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> CreateOffice
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreateOffice) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> ModifyBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifyBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime> ModifyTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifyTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> ModifyOffice
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifyOffice) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Defendant> Defendant
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Defendant) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Defendant>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string LocalName { get; set; }
                new string AddressLine1 { get; set; }
                new string AddressLine2 { get; set; }
                new string City { get; set; }
                new string StateOrProvince { get; set; }
                new string ZIPOrPostalCode { get; set; }
                new global::System.Nullable<short> DBFlag { get; set; }
                new string CreateBy { get; set; }
                new global::System.DateTime CreateTime { get; set; }
                new string CreateOffice { get; set; }
                new string ModifyBy { get; set; }
                new global::System.DateTime ModifyTime { get; set; }
                new string ModifyOffice { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Defendant { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    LocalName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "LocalName",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._LocalName_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._LocalName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._LocalName_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._LocalName_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._LocalName_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._LocalName_OnValueChanged);
                private static void _LocalName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._LocalName, sf);
                }
                private static bool _LocalName_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.LocalName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LocalName_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LocalName_Validate(r);
                }
                private static string _LocalName_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.LocalName;
                }
                private static void _LocalName_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LocalName = v;
                }
                private static void _LocalName_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.LocalName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    AddressLine1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "AddressLine1",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_OnValueChanged);
                private static void _AddressLine1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._AddressLine1, sf);
                }
                private static bool _AddressLine1_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.AddressLine1_IsReadOnly(ref result);
                    return result;
                }
                private static void _AddressLine1_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AddressLine1_Validate(r);
                }
                private static string _AddressLine1_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.AddressLine1;
                }
                private static void _AddressLine1_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AddressLine1 = v;
                }
                private static void _AddressLine1_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.AddressLine1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    AddressLine2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "AddressLine2",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_OnValueChanged);
                private static void _AddressLine2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._AddressLine2, sf);
                }
                private static bool _AddressLine2_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.AddressLine2_IsReadOnly(ref result);
                    return result;
                }
                private static void _AddressLine2_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AddressLine2_Validate(r);
                }
                private static string _AddressLine2_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.AddressLine2;
                }
                private static void _AddressLine2_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AddressLine2 = v;
                }
                private static void _AddressLine2_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.AddressLine2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "City",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_OnValueChanged);
                private static void _City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._City, sf);
                }
                private static bool _City_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.City_IsReadOnly(ref result);
                    return result;
                }
                private static void _City_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.City_Validate(r);
                }
                private static string _City_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.City;
                }
                private static void _City_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.City = v;
                }
                private static void _City_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    StateOrProvince = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "StateOrProvince",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._StateOrProvince_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._StateOrProvince_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._StateOrProvince_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._StateOrProvince_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._StateOrProvince_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._StateOrProvince_OnValueChanged);
                private static void _StateOrProvince_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._StateOrProvince, sf);
                }
                private static bool _StateOrProvince_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.StateOrProvince_IsReadOnly(ref result);
                    return result;
                }
                private static void _StateOrProvince_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StateOrProvince_Validate(r);
                }
                private static string _StateOrProvince_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.StateOrProvince;
                }
                private static void _StateOrProvince_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StateOrProvince = v;
                }
                private static void _StateOrProvince_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.StateOrProvince_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    ZIPOrPostalCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "ZIPOrPostalCode",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIPOrPostalCode_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIPOrPostalCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIPOrPostalCode_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIPOrPostalCode_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIPOrPostalCode_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIPOrPostalCode_OnValueChanged);
                private static void _ZIPOrPostalCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._ZIPOrPostalCode, sf);
                }
                private static bool _ZIPOrPostalCode_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.ZIPOrPostalCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ZIPOrPostalCode_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ZIPOrPostalCode_Validate(r);
                }
                private static string _ZIPOrPostalCode_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.ZIPOrPostalCode;
                }
                private static void _ZIPOrPostalCode_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ZIPOrPostalCode = v;
                }
                private static void _ZIPOrPostalCode_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.ZIPOrPostalCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<short>>.Entry
                    DBFlag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<short>>.Entry(
                        "DBFlag",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DBFlag_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DBFlag_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DBFlag_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DBFlag_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DBFlag_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DBFlag_OnValueChanged);
                private static void _DBFlag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<short>>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._DBFlag, sf);
                }
                private static bool _DBFlag_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.DBFlag_IsReadOnly(ref result);
                    return result;
                }
                private static void _DBFlag_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DBFlag_Validate(r);
                }
                private static global::System.Nullable<short> _DBFlag_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.DBFlag;
                }
                private static void _DBFlag_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::System.Nullable<short> v)
                {
                    d.ImplementationEntity.DBFlag = v;
                }
                private static void _DBFlag_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.DBFlag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    CreateBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "CreateBy",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateBy_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateBy_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateBy_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateBy_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateBy_OnValueChanged);
                private static void _CreateBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateBy, sf);
                }
                private static bool _CreateBy_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.CreateBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreateBy_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreateBy_Validate(r);
                }
                private static string _CreateBy_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.CreateBy;
                }
                private static void _CreateBy_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreateBy = v;
                }
                private static void _CreateBy_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.CreateBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>.Entry
                    CreateTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>.Entry(
                        "CreateTime",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateTime_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateTime_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateTime_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateTime_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateTime_OnValueChanged);
                private static void _CreateTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateTime, sf);
                }
                private static bool _CreateTime_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.CreateTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreateTime_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreateTime_Validate(r);
                }
                private static global::System.DateTime _CreateTime_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.CreateTime;
                }
                private static void _CreateTime_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.CreateTime = global::LightSwitchApplication.Address.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreateTime_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.CreateTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    CreateOffice = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "CreateOffice",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateOffice_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateOffice_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateOffice_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateOffice_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateOffice_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreateOffice_OnValueChanged);
                private static void _CreateOffice_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateOffice, sf);
                }
                private static bool _CreateOffice_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.CreateOffice_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreateOffice_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreateOffice_Validate(r);
                }
                private static string _CreateOffice_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.CreateOffice;
                }
                private static void _CreateOffice_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreateOffice = v;
                }
                private static void _CreateOffice_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.CreateOffice_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    ModifyBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "ModifyBy",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyBy_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyBy_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyBy_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyBy_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyBy_OnValueChanged);
                private static void _ModifyBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifyBy, sf);
                }
                private static bool _ModifyBy_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.ModifyBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifyBy_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifyBy_Validate(r);
                }
                private static string _ModifyBy_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifyBy;
                }
                private static void _ModifyBy_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ModifyBy = v;
                }
                private static void _ModifyBy_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.ModifyBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>.Entry
                    ModifyTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>.Entry(
                        "ModifyTime",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyTime_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyTime_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyTime_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyTime_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyTime_OnValueChanged);
                private static void _ModifyTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifyTime, sf);
                }
                private static bool _ModifyTime_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.ModifyTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifyTime_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifyTime_Validate(r);
                }
                private static global::System.DateTime _ModifyTime_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifyTime;
                }
                private static void _ModifyTime_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ModifyTime = global::LightSwitchApplication.Address.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ModifyTime_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.ModifyTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    ModifyOffice = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "ModifyOffice",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyOffice_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyOffice_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyOffice_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyOffice_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyOffice_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifyOffice_OnValueChanged);
                private static void _ModifyOffice_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifyOffice, sf);
                }
                private static bool _ModifyOffice_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.ModifyOffice_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifyOffice_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifyOffice_Validate(r);
                }
                private static string _ModifyOffice_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifyOffice;
                }
                private static void _ModifyOffice_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ModifyOffice = v;
                }
                private static void _ModifyOffice_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.ModifyOffice_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Defendant>.Entry
                    Defendant = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Defendant>.Entry(
                        "Defendant",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Defendant_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Defendant_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Defendant_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Defendant_GetCoreImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Defendant_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Defendant_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Defendant_Refresh,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Defendant_OnValueChanged);
                private static void _Defendant_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Defendant>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Defendant, sf);
                }
                private static bool _Defendant_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Defendant_IsReadOnly(ref result);
                    return result;
                }
                private static void _Defendant_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Defendant_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Defendant_GetCoreImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Defendant;
                }
                private static global::LightSwitchApplication.Defendant _Defendant_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Defendant, global::LightSwitchApplication.Defendant.DetailsClass>(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Defendant, ref d._Defendant);
                }
                private static void _Defendant_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::LightSwitchApplication.Defendant v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Defendant, ref d._Defendant, (i, ev) => i.Defendant = ev, v);
                }
                private static void _Defendant_Refresh(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Defendant, ref d._Defendant);
                }
                private static void _Defendant_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Defendant_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _LocalName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _AddressLine1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _AddressLine2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _StateOrProvince;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _ZIPOrPostalCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<short>>.Data _DBFlag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _CreateBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>.Data _CreateTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _CreateOffice;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _ModifyBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.DateTime>.Data _ModifyTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _ModifyOffice;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Defendant>.Data _Defendant;
            
        }
    
        #endregion
    }
    
    #endregion
}
