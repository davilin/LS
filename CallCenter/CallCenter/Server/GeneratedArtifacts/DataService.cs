//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_Inserting(global::LightSwitchApplication.Caller entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_Inserted(global::LightSwitchApplication.Caller entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_Updating(global::LightSwitchApplication.Caller entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_Updated(global::LightSwitchApplication.Caller entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_Deleting(global::LightSwitchApplication.Caller entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_Deleted(global::LightSwitchApplication.Caller entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_Validate(global::LightSwitchApplication.Caller entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Callers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Caller, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_Inserting(global::LightSwitchApplication.Telephone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_Inserted(global::LightSwitchApplication.Telephone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_Updating(global::LightSwitchApplication.Telephone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_Updated(global::LightSwitchApplication.Telephone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_Deleting(global::LightSwitchApplication.Telephone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_Deleted(global::LightSwitchApplication.Telephone entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_Validate(global::LightSwitchApplication.Telephone entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephones_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Telephone, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_Inserting(global::LightSwitchApplication.WorkSheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_Inserted(global::LightSwitchApplication.WorkSheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_Updating(global::LightSwitchApplication.WorkSheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_Updated(global::LightSwitchApplication.WorkSheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_Deleting(global::LightSwitchApplication.WorkSheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_Deleted(global::LightSwitchApplication.WorkSheet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_Validate(global::LightSwitchApplication.WorkSheet entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkSheets_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.WorkSheet, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_Inserting(global::LightSwitchApplication.Defendant entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_Inserted(global::LightSwitchApplication.Defendant entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_Updating(global::LightSwitchApplication.Defendant entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_Updated(global::LightSwitchApplication.Defendant entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_Deleting(global::LightSwitchApplication.Defendant entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_Deleted(global::LightSwitchApplication.Defendant entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_Validate(global::LightSwitchApplication.Defendant entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Defendants_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Defendant, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_Inserting(global::LightSwitchApplication.zzzBond entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_Inserted(global::LightSwitchApplication.zzzBond entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_Updating(global::LightSwitchApplication.zzzBond entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_Updated(global::LightSwitchApplication.zzzBond entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_Deleting(global::LightSwitchApplication.zzzBond entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_Deleted(global::LightSwitchApplication.zzzBond entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_Validate(global::LightSwitchApplication.zzzBond entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void zzzBonds_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.zzzBond, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_Inserting(global::LightSwitchApplication.Charge entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_Inserted(global::LightSwitchApplication.Charge entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_Updating(global::LightSwitchApplication.Charge entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_Updated(global::LightSwitchApplication.Charge entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_Deleting(global::LightSwitchApplication.Charge entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_Deleted(global::LightSwitchApplication.Charge entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_Validate(global::LightSwitchApplication.Charge entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Charges_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Charge, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_Inserting(global::LightSwitchApplication.ChargeDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_Inserted(global::LightSwitchApplication.ChargeDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_Updating(global::LightSwitchApplication.ChargeDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_Updated(global::LightSwitchApplication.ChargeDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_Deleting(global::LightSwitchApplication.ChargeDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_Deleted(global::LightSwitchApplication.ChargeDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_Validate(global::LightSwitchApplication.ChargeDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChargeDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChargeDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_Inserting(global::LightSwitchApplication.BondNote entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_Inserted(global::LightSwitchApplication.BondNote entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_Updating(global::LightSwitchApplication.BondNote entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_Updated(global::LightSwitchApplication.BondNote entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_Deleting(global::LightSwitchApplication.BondNote entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_Deleted(global::LightSwitchApplication.BondNote entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_Validate(global::LightSwitchApplication.BondNote entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BondNotes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BondNote, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_Inserting(global::LightSwitchApplication.EmailAddress entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_Inserted(global::LightSwitchApplication.EmailAddress entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_Updating(global::LightSwitchApplication.EmailAddress entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_Updated(global::LightSwitchApplication.EmailAddress entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_Deleting(global::LightSwitchApplication.EmailAddress entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_Deleted(global::LightSwitchApplication.EmailAddress entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_Validate(global::LightSwitchApplication.EmailAddress entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailAddresses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmailAddress, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_Inserting(global::LightSwitchApplication.OperatorInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_Inserted(global::LightSwitchApplication.OperatorInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_Updating(global::LightSwitchApplication.OperatorInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_Updated(global::LightSwitchApplication.OperatorInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_Deleting(global::LightSwitchApplication.OperatorInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_Deleted(global::LightSwitchApplication.OperatorInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_Validate(global::LightSwitchApplication.OperatorInfo entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OperatorInfoes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OperatorInfo, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_Inserting(global::LightSwitchApplication.Address entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_Inserted(global::LightSwitchApplication.Address entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_Updating(global::LightSwitchApplication.Address entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_Updated(global::LightSwitchApplication.Address entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_Deleting(global::LightSwitchApplication.Address entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_Deleted(global::LightSwitchApplication.Address entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_Validate(global::LightSwitchApplication.Address entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Addresses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Address, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Caller>
                __CallersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Caller>(
                    "Callers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Callers_Filter);
            private static bool __Callers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Callers_CanInsert(ref result);
                return result;
            }
            private static bool __Callers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Callers_CanUpdate(ref result);
                return result;
            }
            private static bool __Callers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Callers_CanDelete(ref result);
                return result;
            }
            private static bool __Callers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Callers_CanRead(ref result);
                return result;
            }
            private static void __Callers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Caller e)
            {
                d.Callers_Inserting(e);
            }
            private static void __Callers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Caller e)
            {
                d.Callers_Inserted(e);
            }
            private static void __Callers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Caller e)
            {
                d.Callers_Updating(e);
            }
            private static void __Callers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Caller e)
            {
                d.Callers_Updated(e);
            }
            private static void __Callers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Caller e)
            {
                d.Callers_Deleting(e);
            }
            private static void __Callers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Caller e)
            {
                d.Callers_Deleted(e);
            }
            private static void __Callers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Caller e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Callers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Caller, bool>> __Callers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Caller, bool>> filter = null;
                d.Callers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Telephone>
                __TelephonesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Telephone>(
                    "Telephones",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Telephones_Filter);
            private static bool __Telephones_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Telephones_CanInsert(ref result);
                return result;
            }
            private static bool __Telephones_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Telephones_CanUpdate(ref result);
                return result;
            }
            private static bool __Telephones_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Telephones_CanDelete(ref result);
                return result;
            }
            private static bool __Telephones_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Telephones_CanRead(ref result);
                return result;
            }
            private static void __Telephones_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Telephone e)
            {
                d.Telephones_Inserting(e);
            }
            private static void __Telephones_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Telephone e)
            {
                d.Telephones_Inserted(e);
            }
            private static void __Telephones_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Telephone e)
            {
                d.Telephones_Updating(e);
            }
            private static void __Telephones_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Telephone e)
            {
                d.Telephones_Updated(e);
            }
            private static void __Telephones_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Telephone e)
            {
                d.Telephones_Deleting(e);
            }
            private static void __Telephones_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Telephone e)
            {
                d.Telephones_Deleted(e);
            }
            private static void __Telephones_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Telephone e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Telephones_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Telephone, bool>> __Telephones_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Telephone, bool>> filter = null;
                d.Telephones_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.WorkSheet>
                __WorkSheetsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.WorkSheet>(
                    "WorkSheets",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkSheets_Filter);
            private static bool __WorkSheets_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.WorkSheets_CanInsert(ref result);
                return result;
            }
            private static bool __WorkSheets_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.WorkSheets_CanUpdate(ref result);
                return result;
            }
            private static bool __WorkSheets_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.WorkSheets_CanDelete(ref result);
                return result;
            }
            private static bool __WorkSheets_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.WorkSheets_CanRead(ref result);
                return result;
            }
            private static void __WorkSheets_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkSheet e)
            {
                d.WorkSheets_Inserting(e);
            }
            private static void __WorkSheets_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkSheet e)
            {
                d.WorkSheets_Inserted(e);
            }
            private static void __WorkSheets_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkSheet e)
            {
                d.WorkSheets_Updating(e);
            }
            private static void __WorkSheets_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkSheet e)
            {
                d.WorkSheets_Updated(e);
            }
            private static void __WorkSheets_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkSheet e)
            {
                d.WorkSheets_Deleting(e);
            }
            private static void __WorkSheets_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkSheet e)
            {
                d.WorkSheets_Deleted(e);
            }
            private static void __WorkSheets_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkSheet e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.WorkSheets_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.WorkSheet, bool>> __WorkSheets_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.WorkSheet, bool>> filter = null;
                d.WorkSheets_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Defendant>
                __DefendantsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Defendant>(
                    "Defendants",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Defendants_Filter);
            private static bool __Defendants_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Defendants_CanInsert(ref result);
                return result;
            }
            private static bool __Defendants_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Defendants_CanUpdate(ref result);
                return result;
            }
            private static bool __Defendants_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Defendants_CanDelete(ref result);
                return result;
            }
            private static bool __Defendants_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Defendants_CanRead(ref result);
                return result;
            }
            private static void __Defendants_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Defendant e)
            {
                d.Defendants_Inserting(e);
            }
            private static void __Defendants_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Defendant e)
            {
                d.Defendants_Inserted(e);
            }
            private static void __Defendants_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Defendant e)
            {
                d.Defendants_Updating(e);
            }
            private static void __Defendants_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Defendant e)
            {
                d.Defendants_Updated(e);
            }
            private static void __Defendants_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Defendant e)
            {
                d.Defendants_Deleting(e);
            }
            private static void __Defendants_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Defendant e)
            {
                d.Defendants_Deleted(e);
            }
            private static void __Defendants_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Defendant e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Defendants_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Defendant, bool>> __Defendants_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Defendant, bool>> filter = null;
                d.Defendants_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.zzzBond>
                __zzzBondsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.zzzBond>(
                    "zzzBonds",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__zzzBonds_Filter);
            private static bool __zzzBonds_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.zzzBonds_CanInsert(ref result);
                return result;
            }
            private static bool __zzzBonds_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.zzzBonds_CanUpdate(ref result);
                return result;
            }
            private static bool __zzzBonds_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.zzzBonds_CanDelete(ref result);
                return result;
            }
            private static bool __zzzBonds_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.zzzBonds_CanRead(ref result);
                return result;
            }
            private static void __zzzBonds_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.zzzBond e)
            {
                d.zzzBonds_Inserting(e);
            }
            private static void __zzzBonds_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.zzzBond e)
            {
                d.zzzBonds_Inserted(e);
            }
            private static void __zzzBonds_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.zzzBond e)
            {
                d.zzzBonds_Updating(e);
            }
            private static void __zzzBonds_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.zzzBond e)
            {
                d.zzzBonds_Updated(e);
            }
            private static void __zzzBonds_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.zzzBond e)
            {
                d.zzzBonds_Deleting(e);
            }
            private static void __zzzBonds_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.zzzBond e)
            {
                d.zzzBonds_Deleted(e);
            }
            private static void __zzzBonds_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.zzzBond e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.zzzBonds_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.zzzBond, bool>> __zzzBonds_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.zzzBond, bool>> filter = null;
                d.zzzBonds_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Charge>
                __ChargesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Charge>(
                    "Charges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Charges_Filter);
            private static bool __Charges_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Charges_CanInsert(ref result);
                return result;
            }
            private static bool __Charges_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Charges_CanUpdate(ref result);
                return result;
            }
            private static bool __Charges_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Charges_CanDelete(ref result);
                return result;
            }
            private static bool __Charges_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Charges_CanRead(ref result);
                return result;
            }
            private static void __Charges_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Charge e)
            {
                d.Charges_Inserting(e);
            }
            private static void __Charges_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Charge e)
            {
                d.Charges_Inserted(e);
            }
            private static void __Charges_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Charge e)
            {
                d.Charges_Updating(e);
            }
            private static void __Charges_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Charge e)
            {
                d.Charges_Updated(e);
            }
            private static void __Charges_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Charge e)
            {
                d.Charges_Deleting(e);
            }
            private static void __Charges_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Charge e)
            {
                d.Charges_Deleted(e);
            }
            private static void __Charges_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Charge e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Charges_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Charge, bool>> __Charges_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Charge, bool>> filter = null;
                d.Charges_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChargeDetail>
                __ChargeDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChargeDetail>(
                    "ChargeDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChargeDetails_Filter);
            private static bool __ChargeDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChargeDetails_CanInsert(ref result);
                return result;
            }
            private static bool __ChargeDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChargeDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __ChargeDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChargeDetails_CanDelete(ref result);
                return result;
            }
            private static bool __ChargeDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChargeDetails_CanRead(ref result);
                return result;
            }
            private static void __ChargeDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChargeDetail e)
            {
                d.ChargeDetails_Inserting(e);
            }
            private static void __ChargeDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChargeDetail e)
            {
                d.ChargeDetails_Inserted(e);
            }
            private static void __ChargeDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChargeDetail e)
            {
                d.ChargeDetails_Updating(e);
            }
            private static void __ChargeDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChargeDetail e)
            {
                d.ChargeDetails_Updated(e);
            }
            private static void __ChargeDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChargeDetail e)
            {
                d.ChargeDetails_Deleting(e);
            }
            private static void __ChargeDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChargeDetail e)
            {
                d.ChargeDetails_Deleted(e);
            }
            private static void __ChargeDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChargeDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ChargeDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChargeDetail, bool>> __ChargeDetails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChargeDetail, bool>> filter = null;
                d.ChargeDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.BondNote>
                __BondNotesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.BondNote>(
                    "BondNotes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BondNotes_Filter);
            private static bool __BondNotes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BondNotes_CanInsert(ref result);
                return result;
            }
            private static bool __BondNotes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BondNotes_CanUpdate(ref result);
                return result;
            }
            private static bool __BondNotes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BondNotes_CanDelete(ref result);
                return result;
            }
            private static bool __BondNotes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BondNotes_CanRead(ref result);
                return result;
            }
            private static void __BondNotes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BondNote e)
            {
                d.BondNotes_Inserting(e);
            }
            private static void __BondNotes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BondNote e)
            {
                d.BondNotes_Inserted(e);
            }
            private static void __BondNotes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BondNote e)
            {
                d.BondNotes_Updating(e);
            }
            private static void __BondNotes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BondNote e)
            {
                d.BondNotes_Updated(e);
            }
            private static void __BondNotes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BondNote e)
            {
                d.BondNotes_Deleting(e);
            }
            private static void __BondNotes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BondNote e)
            {
                d.BondNotes_Deleted(e);
            }
            private static void __BondNotes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BondNote e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.BondNotes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BondNote, bool>> __BondNotes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BondNote, bool>> filter = null;
                d.BondNotes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmailAddress>
                __EmailAddressesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmailAddress>(
                    "EmailAddresses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailAddresses_Filter);
            private static bool __EmailAddresses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmailAddresses_CanInsert(ref result);
                return result;
            }
            private static bool __EmailAddresses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmailAddresses_CanUpdate(ref result);
                return result;
            }
            private static bool __EmailAddresses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmailAddresses_CanDelete(ref result);
                return result;
            }
            private static bool __EmailAddresses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmailAddresses_CanRead(ref result);
                return result;
            }
            private static void __EmailAddresses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailAddress e)
            {
                d.EmailAddresses_Inserting(e);
            }
            private static void __EmailAddresses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailAddress e)
            {
                d.EmailAddresses_Inserted(e);
            }
            private static void __EmailAddresses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailAddress e)
            {
                d.EmailAddresses_Updating(e);
            }
            private static void __EmailAddresses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailAddress e)
            {
                d.EmailAddresses_Updated(e);
            }
            private static void __EmailAddresses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailAddress e)
            {
                d.EmailAddresses_Deleting(e);
            }
            private static void __EmailAddresses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailAddress e)
            {
                d.EmailAddresses_Deleted(e);
            }
            private static void __EmailAddresses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailAddress e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmailAddresses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmailAddress, bool>> __EmailAddresses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmailAddress, bool>> filter = null;
                d.EmailAddresses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OperatorInfo>
                __OperatorInfoesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OperatorInfo>(
                    "OperatorInfoes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OperatorInfoes_Filter);
            private static bool __OperatorInfoes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OperatorInfoes_CanInsert(ref result);
                return result;
            }
            private static bool __OperatorInfoes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OperatorInfoes_CanUpdate(ref result);
                return result;
            }
            private static bool __OperatorInfoes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OperatorInfoes_CanDelete(ref result);
                return result;
            }
            private static bool __OperatorInfoes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OperatorInfoes_CanRead(ref result);
                return result;
            }
            private static void __OperatorInfoes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OperatorInfo e)
            {
                d.OperatorInfoes_Inserting(e);
            }
            private static void __OperatorInfoes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OperatorInfo e)
            {
                d.OperatorInfoes_Inserted(e);
            }
            private static void __OperatorInfoes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OperatorInfo e)
            {
                d.OperatorInfoes_Updating(e);
            }
            private static void __OperatorInfoes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OperatorInfo e)
            {
                d.OperatorInfoes_Updated(e);
            }
            private static void __OperatorInfoes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OperatorInfo e)
            {
                d.OperatorInfoes_Deleting(e);
            }
            private static void __OperatorInfoes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OperatorInfo e)
            {
                d.OperatorInfoes_Deleted(e);
            }
            private static void __OperatorInfoes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OperatorInfo e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OperatorInfoes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OperatorInfo, bool>> __OperatorInfoes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OperatorInfo, bool>> filter = null;
                d.OperatorInfoes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Address>
                __AddressesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Address>(
                    "Addresses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Addresses_Filter);
            private static bool __Addresses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Addresses_CanInsert(ref result);
                return result;
            }
            private static bool __Addresses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Addresses_CanUpdate(ref result);
                return result;
            }
            private static bool __Addresses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Addresses_CanDelete(ref result);
                return result;
            }
            private static bool __Addresses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Addresses_CanRead(ref result);
                return result;
            }
            private static void __Addresses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Address e)
            {
                d.Addresses_Inserting(e);
            }
            private static void __Addresses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Address e)
            {
                d.Addresses_Inserted(e);
            }
            private static void __Addresses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Address e)
            {
                d.Addresses_Updating(e);
            }
            private static void __Addresses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Address e)
            {
                d.Addresses_Updated(e);
            }
            private static void __Addresses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Address e)
            {
                d.Addresses_Deleting(e);
            }
            private static void __Addresses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Address e)
            {
                d.Addresses_Deleted(e);
            }
            private static void __Addresses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Addresses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Address, bool>> __Addresses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Address, bool>> filter = null;
                d.Addresses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
